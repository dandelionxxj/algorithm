package bishi.algorithm.pailiezuhe;

/**
 * Created by asussl on 2016/10/18.
 */
//1.假设有n对左右括号，请求出合法的排列有多少个？合法是指每一个括号都可以找到与之配对的括号，
//比如n=1时，()是合法的，但是)(为不合法。给定一个整数n，请返回所求的合法排列数。保证结果在int范围内。

//2.n个数进出栈的顺序有多少种？假设栈的容量无限大。
//给定一个整数n，请返回所求的进出栈顺序个数。保证结果在int范围内。

//3.2n个人排队买票，n个人拿5块钱，n个人拿10块钱，票价是5块钱1张，每个人买一张票，售票员手里没有零钱，
//问有多少种排队方法让售票员可以顺利卖票。

//4.求n个无差别的节点构成的二叉树有多少种不同的结构？
//给定一个整数n，请返回不同结构的二叉树的个数。保证结果在int范围内

//5.12个高矮不同的人，排成两排，每排必须是从矮到高排列，而且第二排比对应的第一排的人高，问排列方式有多少种？
//给定一个偶数n，请返回所求的排列方式个数。保证结果在int范围内。(不理解)

public class Parenthesis {
    public static void main(String [] args){

    }
    public int countLegalWays(int n) {
        // write code here
        //转化成卡特兰数
        int a=1;
        for(int i=n+1;i<=2*n;i++){
            a*=i;
        }
        for(int i=n+1;i>1;i--){
            a/=i;
        }
        return a;
    }
}
